package visaotcc;

import Login.DadosDeSessao;
import Login.telaLogin;
import controlador.AlunoDao;
import controlador.Conexao;
import controlador.ResponsaveisDao;
import controlador.TurmaDao;
import controlador.UsuarioDao;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Aluno;
import modelo.Responsavel;
import modelo.Turma;
import modelo.Usuario;
import visaotcc.CadUsuario;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Connection;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.Timer;
import modelo.AlunosPorTurma;


/**
 *
 * @author caiqu
 */
public class Principal extends javax.swing.JFrame {
     public Principal listarForm;
     public GerenciarAluno AlunoForm;
     public Relacionamento_Turma_Aluno relaionamentoForm;
     
//     private Timer sessionTimer;
//     private int tempoMaximoSessao = 10000/*120000*/; // 2 minutos
//     private static List<JFrame> telasAbertas = new ArrayList<>();
//     private static telaLogin telaLoginInstance = null;

    /**
     * Creates new form AlunoListar
     */
    public Principal() {
        
        initComponents();
        //telasAbertas.add(this);
        this.setIconImage(new javax.swing.ImageIcon(getClass().getResource("/imagens/CC.png")).getImage());
        
         this.setTitle(DadosDeSessao.nomeSistema /*+ " - " + DadosDeSessao.getUsuario().getNome()*/);
         //jLabel5.setText(DadosDeSessao.getUsuario().getNome());
       // Configurar o timer da sessão
        
//        this.configuratempo();
//        this.verificasessao();
//        this.reiniciarTimerSessao();
    }
//    private void configuratempo() {
//        // Configurar o timer da sessão (se ainda não estiver configurado)
//        if (sessionTimer == null) {
//            sessionTimer = new Timer(tempoMaximoSessao, new ActionListener() {
//                @Override
//                public void actionPerformed(ActionEvent e) {
//                    exibirMensagemSessaoExpirada();
//                }
//            });
//            sessionTimer.start();
//        }
//    }
//
//private void verificasessao() {
//        // Adicionar um KeyListener para reiniciar o timer quando houver interação do usuário
//        addKeyListener(new KeyListener() {
//            @Override
//            public void keyTyped(KeyEvent e) {
//                reiniciarTimerSessao();
//            }
//
//            @Override
//            public void keyPressed(KeyEvent e) {
//                reiniciarTimerSessao();
//            }
//
//            @Override
//            public void keyReleased(KeyEvent e) {
//                reiniciarTimerSessao();
//            }
//        });
//
//        // Iniciar o timer da sessão
//        sessionTimer.start();
//    }
//  private void exibirMensagemSessaoExpirada() {
//        // Exibir mensagem
//        JOptionPane.showMessageDialog(this, "Sua sessão expirou. Voltando para a tela de login.", "Sessão Expirada", JOptionPane.INFORMATION_MESSAGE);
//
//        // Fechar todas as telas abertas
//        for (JFrame tela : telasAbertas) {
//            tela.dispose();
//        }
//        telasAbertas.clear(); // Limpar a lista
//
//        // Voltar para a tela de login apenas se não houver uma instância já aberta
//        if (telaLoginInstance == null) {
//            telaLoginInstance = new telaLogin();
//            telaLoginInstance.setVisible(true);
//        }
//
//        // Fechar a instância atual da Principal
//        this.dispose();
//    }
//
// 
//  // Adicione este método para reiniciar o temporizador quando houver interação em qualquer tela
//    public void reiniciarTimerSessao() {
//        if (sessionTimer != null) {
//            sessionTimer.restart();
//        }
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jMenu2.setText("Gerenciar");

        jMenuItem4.setText("Turma");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem5.setText("Aluno");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem6.setText("Responsaveis");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem7.setText("Usuários");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuBar1.add(jMenu2);

        jMenu4.setText("Pagamentos");

        jMenuItem10.setText("Gerenciar Mensalidades");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem10);

        jMenuItem1.setText("Gerenciar Gastos");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem1);

        jMenuBar1.add(jMenu4);

        jMenu3.setText("Logoff");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 889, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 486, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3ActionPerformed

    }//GEN-LAST:event_jMenu3ActionPerformed

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        telaLogin uc = new telaLogin();

        int resposta = JOptionPane.showConfirmDialog(this, "Deseja mesmo sair?", "Sair", JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            uc.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jMenu3MouseClicked

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        GerenciarTurma uc = new GerenciarTurma();
        uc.setVisible(true);
        uc.listarForm = this;
        // Adicionar a instância à lista de telas abertas
        //telasAbertas.add(uc);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        GerenciarAluno uc = new GerenciarAluno();
        uc.setVisible(true);
        uc.listarForm = this;
        
        // Adicionar a instância à lista de telas abertas
        //telasAbertas.add(uc);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        GerenciarResponsaveis uc = new GerenciarResponsaveis();
        uc.setVisible(true);
        uc.listarForm = this;
        // Adicionar a instância à lista de telas abertas
        //telasAbertas.add(uc);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        Gerenciarusuarios uc = new Gerenciarusuarios();
        uc.setVisible(true);
        uc.listarForm = this;
        // Adicionar a instância à lista de telas abertas
        //telasAbertas.add(uc);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        GerenciarPagamentos uc = new GerenciarPagamentos();
        uc.setVisible(true);
        uc.listarForm = this;
        
        // Adicionar a instância à lista de telas abertas
        //telasAbertas.add(uc);
        
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        AddCompraProduto uc = new AddCompraProduto();
        uc.setVisible(true);
        uc.listarForm = this;
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    
   
    
    public void callback() {
       
        this.carregarTabelaUsuario();
    }
    
     
      private void carregarTabelaUsuario() {
       //String campoPesquisa3 = jTextFieldPesquisa3.getText();
       //this.preencherTabela3(campoPesquisa3);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    // End of variables declaration//GEN-END:variables
}
