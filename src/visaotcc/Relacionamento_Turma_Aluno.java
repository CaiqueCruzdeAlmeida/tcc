/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package visaotcc;

import Login.DadosDeSessao;
import controlador.AlunoDao;
import controlador.AlunosPorTurmaDao;
import controlador.TurmaDao;
import java.awt.Color;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.NumberFormatter;
import modelo.Aluno;
import modelo.AlunosPorTurma;
import modelo.Turma;

/**
 *
 * @author Caique
 */
public class Relacionamento_Turma_Aluno extends javax.swing.JFrame {
    public Relacionamento_Turma_Aluno relaionamentoForm;
    
    public Principal listarForm;
    public Pagamento PagamentoForm;
    public GerenciarTurma gerenciarTurmaForm;
    
     private ArrayList<Integer> id = new ArrayList();
     private ArrayList<String> Desc = new ArrayList();
     
     
     private ArrayList<Integer> idAluno = new ArrayList();
     private ArrayList<String> DescAluno = new ArrayList();
    
     private ArrayList<Integer> id2 = new ArrayList();
     private ArrayList<String> Desc2 = new ArrayList();
     
     private ArrayList<Integer> idAluno2 = new ArrayList();
     private ArrayList<String> DescAluno2 = new ArrayList();
     GerenciarAluno AlunoForm;
     
     
     
    /**
     * Creates new form Relacionamento_Turma_Aluno
     */
    public Relacionamento_Turma_Aluno() {
        initComponents();            
        this.setIconImage(new javax.swing.ImageIcon(getClass().getResource("/imagens/CC.png")).getImage());
        this.setTitle(DadosDeSessao.nomeSistema);
        
        this.HabilitarSalvar();
        this.HabilitarRemover();
        
        carregaComboBoxTurma();
        carregaComboBoxAluno();
        carregaComboBoxAluno2();
        carregaComboBoxTurma2();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxAluno = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxTurma = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButtonSalvar = new javax.swing.JButton();
        jTextFieldIDAluno = new javax.swing.JTextField();
        jTextFieldIDTurma = new javax.swing.JTextField();
        jFormattedTextFieldFechamento = new javax.swing.JFormattedTextField();
        jFormattedTextFieldInicio = new javax.swing.JFormattedTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxAluno2 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jComboBoxTurma2 = new javax.swing.JComboBox<>();
        jButtonRemover = new javax.swing.JButton();
        jTextFieldIDAluno2 = new javax.swing.JTextField();
        jTextFieldTurma2 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Aluno:");

        jComboBoxAluno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Selecione --" }));
        jComboBoxAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAlunoActionPerformed(evt);
            }
        });

        jLabel2.setText("Turma:");

        jComboBoxTurma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Selecione --" }));
        jComboBoxTurma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTurmaActionPerformed(evt);
            }
        });

        jLabel3.setText("Data de Fechamento:");

        jLabel5.setText("Data de In√≠cio:");

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jTextFieldIDAluno.setText("0");
        jTextFieldIDAluno.setEnabled(false);

        jTextFieldIDTurma.setText("0");
        jTextFieldIDTurma.setEnabled(false);

        try {
            jFormattedTextFieldFechamento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            jFormattedTextFieldInicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldFechamento, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jTextFieldIDAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldIDTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jFormattedTextFieldFechamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextFieldInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonSalvar)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldIDAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldIDTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21))))
        );

        jTabbedPane1.addTab("Gerenciar", jPanel1);

        jLabel6.setText("Aluno:");

        jComboBoxAluno2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Selecione --" }));
        jComboBoxAluno2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAluno2ActionPerformed(evt);
            }
        });

        jLabel7.setText("Turma:");

        jComboBoxTurma2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Selecione --" }));
        jComboBoxTurma2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTurma2ActionPerformed(evt);
            }
        });

        jButtonRemover.setText("Remover");
        jButtonRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverActionPerformed(evt);
            }
        });

        jTextFieldIDAluno2.setText("0");
        jTextFieldIDAluno2.setEnabled(false);

        jTextFieldTurma2.setText("0");
        jTextFieldTurma2.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxAluno2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxTurma2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jTextFieldIDAluno2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldTurma2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 103, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxAluno2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxTurma2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldIDAluno2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldTurma2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(jButtonRemover)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Remover", jPanel4);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Adicionar/Remover Aluno a Turma");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(133, 133, 133))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(jLabel4))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
public void HabilitarSalvar(){
    // Supondo que jButtonSalvar seja o bot√£o "Salvar"
    jButtonSalvar.setEnabled(false); // Come√ßa desativado

    // Crie um DocumentListener para monitorar os campos que voc√™ deseja
    DocumentListener documentListener = new DocumentListener() {
        private void checkFields() {
        String idturmaText = jTextFieldIDTurma.getText();
        String idalunoText = jTextFieldIDAluno.getText();
        String datafechamento = jFormattedTextFieldFechamento.getText();
        String datainicio = jFormattedTextFieldInicio.getText();

        // Verifique se algum dos campos obrigat√≥rios est√° vazio
        if (idturmaText.isEmpty() || idalunoText.isEmpty() || datafechamento.equals("    -  -  ") || datainicio.equals("    -  -  ")) {
            jButtonSalvar.setEnabled(false);
            return;
        }
        
        try {
            int idturma = Integer.parseInt(idturmaText);
            int idaluno = Integer.parseInt(idalunoText);
            
             // Verifique se os campos n√£o s√£o iguais a zero e se os campos adicionais est√£o preenchidos corretamente
                boolean dateValid = datainicio.matches("\\d{2}-\\d{2}-\\d{4}");
                boolean dateValid1 = datafechamento.matches("\\d{2}-\\d{2}-\\d{4}");
            // Verifique se os campos n√£o s√£o iguais a zero para ativar o bot√£o
            jButtonSalvar.setEnabled(idturma != 0 && idaluno != 0 && dateValid && dateValid1);
        } catch (NumberFormatException e) {
            // Em caso de erro na convers√£o, desative o bot√£o
            jButtonSalvar.setEnabled(false);
        }
    }

        @Override
        public void insertUpdate(DocumentEvent e) {
            checkFields();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            checkFields();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
            checkFields();
        }
    };

        // Adicione o DocumentListener aos campos relevantes
        jTextFieldIDTurma.getDocument().addDocumentListener(documentListener);
        jTextFieldIDAluno.getDocument().addDocumentListener(documentListener);
        jFormattedTextFieldFechamento.getDocument().addDocumentListener(documentListener);
        jFormattedTextFieldInicio.getDocument().addDocumentListener(documentListener);
}

public void HabilitarRemover(){
    // Supondo que jButtonSalvar seja o bot√£o "Salvar"
    jButtonRemover.setEnabled(false); // Come√ßa desativado

    // Crie um DocumentListener para monitorar os campos que voc√™ deseja
    DocumentListener documentListener = new DocumentListener() {
    private void checkFields() {
        String idturmaText = jTextFieldTurma2.getText();
        String idalunoText = jTextFieldIDAluno2.getText();

        // Verifique se os campos est√£o vazios para evitar exce√ß√µes
        if (idturmaText.isEmpty() || idalunoText.isEmpty()) {
            jButtonRemover.setEnabled(false);
            return;
        }

        try {
            int idturma = Integer.parseInt(idturmaText);
            int idaluno = Integer.parseInt(idalunoText);

            // Verifique se os campos n√£o s√£o iguais a zero para ativar o bot√£o
            jButtonRemover.setEnabled(idturma != 0 && idaluno != 0);
        } catch (NumberFormatException e) {
            // Em caso de erro na convers√£o, desative o bot√£o
            jButtonRemover.setEnabled(false);
        }
    }

        @Override
        public void insertUpdate(DocumentEvent e) {
            checkFields();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            checkFields();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
            checkFields();
        }
    };

    // Adicione o DocumentListener aos campos relevantes
    jTextFieldTurma2.getDocument().addDocumentListener(documentListener);
    jTextFieldIDAluno2.getDocument().addDocumentListener(documentListener);

}

    private void jComboBoxAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAlunoActionPerformed
       String nomeAluno = (String) jComboBoxAluno.getSelectedItem();

        if (nomeAluno != null && !nomeAluno.isEmpty()) {
            try {
                AlunoDao dao = new AlunoDao();
                Integer idAluno = dao.obterIdAlunoPeloNome(nomeAluno);

                jTextFieldIDAluno.setText(String.valueOf(idAluno));
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Erro ao obter o ID do aluno.");
            }
          }        
    }//GEN-LAST:event_jComboBoxAlunoActionPerformed

    
    
    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
    String datafechamento = jFormattedTextFieldFechamento.getText();
    String datainicio = jFormattedTextFieldInicio.getText();
    Integer idTurma = Integer.parseInt(jTextFieldIDTurma.getText());
    Integer idAluno = Integer.parseInt(jTextFieldIDAluno.getText());
    
    Integer idAlunosPorTurma = 0;

    SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
    
    try {
        java.util.Date dataInicio = dateFormat.parse(datainicio);
        java.util.Date dataFechamento = dateFormat.parse(datafechamento);

        // Validar se as datas s√£o iguais
        if (dataInicio.equals(dataFechamento)) {
            JOptionPane.showMessageDialog(this, "A data de in√≠cio e fechamento n√£o podem ser iguais.");
            return;
        }

        // Validar se a data de in√≠cio √© posterior √† data atual
        Calendar calAtual = Calendar.getInstance();
        if (dataInicio.before(calAtual.getTime())) {
            JOptionPane.showMessageDialog(this, "A data de in√≠cio √© anterior √† data atual.");
            return;
        }

        // Validar se a data de fechamento √© posterior √† data atual
        if (dataFechamento.before(calAtual.getTime())) {
            JOptionPane.showMessageDialog(this, "A data de fechamento √© anterior √† data atual.");
            return;
        }

        // Validar se a data de in√≠cio √© anterior √† data de fechamento
        if (dataInicio.after(dataFechamento)) {
            JOptionPane.showMessageDialog(this, "A data de in√≠cio n√£o pode ser superior √† data de fechamento.");
            return;
        }

        // Validar se o m√™s de in√≠cio √© v√°lido
        Calendar calInicio = Calendar.getInstance();
        calInicio.setTime(dataInicio);
        int mesInicio = calInicio.get(Calendar.MONTH) + 1; // Calendar.MONTH √© base 0, por isso soma 1
        if (mesInicio > 12 || mesInicio < 1) {
            JOptionPane.showMessageDialog(this, "M√™s de in√≠cio inv√°lido.");
            return;
        }

        // Validar se o m√™s de fechamento √© v√°lido
        Calendar calFechamento = Calendar.getInstance();
        calFechamento.setTime(dataFechamento);
        int mesFechamento = calFechamento.get(Calendar.MONTH) + 1; // Calendar.MONTH √© base 0, por isso soma 1
        if (mesFechamento > 12 || mesFechamento < 1) {
            JOptionPane.showMessageDialog(this, "M√™s de fechamento inv√°lido.");
            return;
        }

        // Validar se o ano de in√≠cio √© bissexto (se for fevereiro com dia 29)
        int diaInicio = calInicio.get(Calendar.DAY_OF_MONTH);
        int anoInicio = calInicio.get(Calendar.YEAR);
        boolean isBissextoInicio = (anoInicio % 4 == 0 && (anoInicio % 100 != 0 || anoInicio % 400 == 0));

        if (diaInicio == 29 && mesInicio == 2 && !isBissextoInicio) {
            JOptionPane.showMessageDialog(this, "Ano n√£o √© bissexto. Fevereiro n√£o tem dia 29 neste ano.");
            jFormattedTextFieldInicio.setForeground(Color.RED);
            return;
        }

        // Validar se a data de in√≠cio n√£o √© inv√°lida para fevereiro (30 ou 31)
        if ((diaInicio == 30 || diaInicio == 31) && mesInicio == 2) {
            JOptionPane.showMessageDialog(this, "Data inv√°lida: Fevereiro n√£o tem dia 30 ou 31.");
            jFormattedTextFieldInicio.setForeground(Color.RED);
            return;
        }

        // Continua√ß√£o do seu c√≥digo para inser√ß√£o no banco de dados...
        
        AlunosPorTurma alunoPorTurma = new AlunosPorTurma(dataFechamento, idTurma, idAluno, dataInicio, idAlunosPorTurma);

        AlunosPorTurmaDao alunoDao = new AlunosPorTurmaDao();
        
        alunoDao.inserir(alunoPorTurma, Integer.valueOf(idTurma));

        GerenciarTurma gerenciarTurmaForm = new GerenciarTurma();
        if (gerenciarTurmaForm != null) {
            gerenciarTurmaForm.callback();
        }

        JOptionPane.showMessageDialog(this, "Registro inserido.");
        this.dispose();
    } catch (ParseException e) {
        JOptionPane.showMessageDialog(this, "Erro ao converter data: " + e.getMessage());
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage());
    }
        
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jComboBoxTurmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTurmaActionPerformed
       String nomeTurma = (String) jComboBoxTurma.getSelectedItem();

        if (nomeTurma != null && !nomeTurma.isEmpty()) {
            try {
                TurmaDao dao = new TurmaDao();
                Integer idTurma = dao.obterIdTurmaPeloNome(nomeTurma);

                jTextFieldIDTurma.setText(String.valueOf(idTurma));
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Erro ao obter o ID da Turma.");
            }
          }        
    }//GEN-LAST:event_jComboBoxTurmaActionPerformed

    private void jComboBoxAluno2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAluno2ActionPerformed
        String nomeAluno = (String) jComboBoxAluno2.getSelectedItem();

        if (nomeAluno != null && !nomeAluno.isEmpty()) {
            try {
                AlunoDao dao = new AlunoDao();
                Integer idAluno = dao.obterIdAlunoPeloNome(nomeAluno);

                jTextFieldIDAluno2.setText(String.valueOf(idAluno));
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Erro ao obter o ID do aluno.");
            }
          }     
    }//GEN-LAST:event_jComboBoxAluno2ActionPerformed

    private void jButtonRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverActionPerformed
     
       String idTurmaText = jTextFieldTurma2.getText();
       String idAlunoText = jTextFieldIDAluno2.getText();

        if (!idTurmaText.isEmpty() && !idAlunoText.isEmpty()) {
            try {
                Integer idturma = Integer.parseInt(idTurmaText);
                Integer idaluno = Integer.parseInt(idAlunoText);

                AlunosPorTurma u = new AlunosPorTurma(idturma, idaluno);

                AlunosPorTurmaDao alunoDao = new AlunosPorTurmaDao();
                alunoDao.removerAlunoDaTurma(idaluno, idturma); // Remover o aluno da turma

                JOptionPane.showMessageDialog(this, "Aluno removido da turma.");
                this.dispose();
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Por favor, insira valores num√©ricos v√°lidos para ID da turma e ID do aluno.");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, preencha os campos ID da turma e ID do aluno.");
        }
    }//GEN-LAST:event_jButtonRemoverActionPerformed

    private void jComboBoxTurma2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTurma2ActionPerformed
        String nomeTurma = (String) jComboBoxTurma2.getSelectedItem();

        if (nomeTurma != null && !nomeTurma.isEmpty()) {
            try {
                TurmaDao dao = new TurmaDao();
                Integer idTurma = dao.obterIdTurmaPeloNome(nomeTurma);

                jTextFieldTurma2.setText(String.valueOf(idTurma));
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Erro ao obter o ID da Turma.");
            }
        }
    }//GEN-LAST:event_jComboBoxTurma2ActionPerformed
  
    
    
        private void carregaComboBoxTurma(){
                try{
                    TurmaDao dao = new TurmaDao();
                    List<Turma> lista = dao.buscar("");

                    //Atribui o primeiro grupo(0 - selecione)
                    this.id.add(0);
                    this.Desc.add("-- Selecione --");

                    //Atribui os grupos que est√£o cadastrados no banco
                    for(Turma turma : lista){
                        this.id.add(turma.getIdTurma());
                        this.Desc.add(turma.getNometurma());
                    }

                    //Carrega no combobox a lista de grupos 
                    jComboBoxTurma.setModel(new javax.swing.DefaultComboBoxModel<>(Desc.toArray(new String[0])));
                }catch(Exception ex){
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Erro ao carregar combobox 'grupo de usuario': "+ex);
                }
    }
        private void carregaComboBoxTurma2(){
                try{
                    TurmaDao dao = new TurmaDao();
                    List<Turma> lista = dao.buscar("");

                    //Atribui o primeiro grupo(0 - selecione)
                    this.id2.add(0);
                    this.Desc2.add("-- Selecione --");

                    //Atribui os grupos que est√£o cadastrados no banco
                    for(Turma turma : lista){
                        this.id2.add(turma.getIdTurma());
                        this.Desc2.add(turma.getNometurma());
                    }

                    //Carrega no combobox a lista de grupos 
                    jComboBoxTurma2.setModel(new javax.swing.DefaultComboBoxModel<>(Desc2.toArray(new String[0])));
                }catch(Exception ex){
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Erro ao carregar combobox 'grupo de usuario': "+ex);
                }
    }
         private void carregaComboBoxAluno(){
                try{
                    AlunoDao dao = new AlunoDao();
                    List<Aluno> lista = dao.buscar("");

                    //Atribui o primeiro grupo(0 - selecione)
                    this.idAluno.add(0);
                    this.DescAluno.add("-- Selecione --");

                    //Atribui os grupos que est√£o cadastrados no banco
                    for(Aluno aluno : lista){
                        this.idAluno.add(aluno.getId());
                        this.DescAluno.add(aluno.getNome());
                    }

                    //Carrega no combobox a lista de grupos 
                    jComboBoxAluno.setModel(new javax.swing.DefaultComboBoxModel<>(DescAluno.toArray(new String[0])));
                }catch(Exception ex){
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Erro ao carregar combobox 'grupo de usuario': "+ex);
                }
    }
         private void carregaComboBoxAluno2(){
                try{
                    AlunoDao dao = new AlunoDao();
                    List<Aluno> lista = dao.buscar("");

                    //Atribui o primeiro grupo(0 - selecione)
                    this.idAluno2.add(0);
                    this.DescAluno2.add("-- Selecione --");

                    //Atribui os grupos que est√£o cadastrados no banco
                    for(Aluno aluno : lista){
                        this.idAluno2.add(aluno.getId());
                        this.DescAluno2.add(aluno.getNome());
                    }

                    //Carrega no combobox a lista de grupos 
                    jComboBoxAluno2.setModel(new javax.swing.DefaultComboBoxModel<>(DescAluno2.toArray(new String[0])));
                }catch(Exception ex){
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Erro ao carregar combobox 'grupo de usuario': "+ex);
                }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Relacionamento_Turma_Aluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Relacionamento_Turma_Aluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Relacionamento_Turma_Aluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Relacionamento_Turma_Aluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Relacionamento_Turma_Aluno().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonRemover;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JComboBox<String> jComboBoxAluno;
    private javax.swing.JComboBox<String> jComboBoxAluno2;
    private javax.swing.JComboBox<String> jComboBoxTurma;
    private javax.swing.JComboBox<String> jComboBoxTurma2;
    private javax.swing.JFormattedTextField jFormattedTextFieldFechamento;
    private javax.swing.JFormattedTextField jFormattedTextFieldInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextFieldIDAluno;
    private javax.swing.JTextField jTextFieldIDAluno2;
    private javax.swing.JTextField jTextFieldIDTurma;
    private javax.swing.JTextField jTextFieldTurma2;
    // End of variables declaration//GEN-END:variables


}
